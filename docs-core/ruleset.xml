<?xml version="1.0"?>

<ruleset name="Software Engineering Rules"
         xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">

    <description>
        Rules for lab 7
    </description>


    <!-- Your rules will come here -->
    <!-- Code Size Rules -->
    <rule ref="category/java/design.xml/ExcessiveClassLength">
        <properties>
            <property name="minimum" value="1000"/>
        </properties>
    </rule>

    <!-- Design Rules -->
    <rule ref="category/java/design.xml/CyclomaticComplexity">
        <properties>
            <property name="reportLevel" value="10"/>
        </properties>
    </rule>

    <!-- Weighted Methods per Class  -->
    <rule ref="category/java/design.xml/TooManyMethods">
        <properties>
            <property name="maxmethods" value="15"/>
        </properties>
    </rule>

    <!-- Coupling Between Objects   -->
    <rule ref="category/java/design.xml/CouplingBetweenObjects">
        <properties>
            <property name="threshold" value="10"/>
        </properties>
    </rule>

    <!-- Lack of Cohesion in Methods   -->
    <rule ref="category/java/design.xml/GodClass">
        <description>
            A God class is a class that knows everything and does everything.
            Too many responsibilities = lack of cohesion.
        </description>
        <priority>3</priority>
        <properties>
            <property name="violationSuppressXPath" value="//ClassOrInterfaceDeclaration/.."/>
        </properties>
    </rule>


</ruleset>